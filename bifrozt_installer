#!/bin/bash

#
#   Developer:      Are Hansen
#   Date:           2014, May 5
#
#   Usage:
#   This script is executed by the debconf installer and takes care of configuration,
#   package installation, updating and upgrading of Bifrozt during installation.
#
#   Copyright (c) 2014, Are Hansen - Honeypot Development
# 
#   All rights reserved.
# 
#   Redistribution and use in source and binary forms, with or without modification, are
#   permitted provided that the following conditions are met:
#
#   1. Redistributions of source code must retain the above copyright notice, this list
#   of conditions and the following disclaimer.
# 
#   2. Redistributions in binary form must reproduce the above copyright notice, this
#   list of conditions and the following disclaimer in the documentation and/or other
#   materials provided with the distribution.
# 
#   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND AN
#   EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
#   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
#   SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
#   TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
#   BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
#   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF
#   THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

unset DEBCONF_REDIR
unset DEBCONF_FRONTEND
unset DEBIAN_HAS_FRONTEND
unset DEBIAN_FRONTEND

declare -rx Script="${0##*/}"
declare Slog="/var/log/$Script.log"

#
# --------------------------------------------------------- SOFTWARE INSTALLATION
#

# - Update, upgrade and dist-upgrade
function run_sw_update()
{
    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Making sure the entire system is up to date" >> $Slog

    apt-get update
    apt-get upgrade -y
    apt-get dist-upgrade -y

    echo "$(date +"%Y  %b %d - %T") $Script[$$]: System is now up to date" >> $Slog
}


# - Clone HonSSH
function git_honssh()
{
    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Installing HonSSH in /opt/honssh" >> $Slog

    git clone https://code.google.com/p/honssh/ /opt/honssh 2>$Slog
    Err="$?"

    if [ "$Err" != "0" ]
    then
        echo "$(date +"%Y  %b %d - %T") $Script[$$]: HonSSH failed with error code: $Err" >> $Slog
    else
        echo "$(date +"%Y  %b %d - %T") $Script[$$]: HonSSH was installed. Exit code: $Err" >> $Slog
    fi
}


#
# --------------------------------------------------------- CONFIG FILES
#


# - dhcpd.conf
function dhcpd_conf()
{
echo "$(date +"%Y  %b %d - %T") $Script[$$]: Generating /etc/dhcp/dhcpd.conf" >> $Slog

tee /etc/dhcp/dhcpd.conf << _xXx_
#   
#   Generated by $Script: $(date +"%y.%m.%d - %T") 
#
authoritative;
ddns-update-style none;
log-facility local7;
default-lease-time 600;
max-lease-time 7200;

option domain-name "internal";
option domain-name-servers 8.8.8.8;
option subnet-mask 255.255.252.0;
option broadcast-address 10.199.115.255;
option routers 10.199.112.1;

subnet 10.199.112.0 netmask 255.255.252.0 {
    range 10.199.113.2 10.199.113.254;

    #host microcloud-sshsrv028 {
    #   hardware ethernet 00:11:22:33:44:55;
    #   fixed-address 10.199.115.154;
    #   }

}
_xXx_

echo "$(date +"%Y  %b %d - %T") $Script[$$]: Created /etc/dhcp/dhcpd.conf" >> $Slog
}


# - interfaces
function if_file()
{
echo "$(date +"%Y  %b %d - %T") $Script[$$]: Generating /etc/network/interfaces" >> $Slog

tee /etc/network/interfaces << _xXx_
#   
#   Generated by $Script: $(date +"%y.%m.%d - %T") 
#

# - The loopback network interface
auto lo
iface lo inet loopback

# - The firewall rule set
pre-up iptables-restore < /etc/network/iptables

# - External interface
auto eth0
iface eth0 inet dhcp

# - Internal interface
auto eth1
iface eth1 inet static
    address 10.199.112.1
    netmask 255.255.252.0
    network 10.199.112.0
    broadcast 10.199.115.255

dns-nameservers 8.8.8.8
_xXx_

echo "$(date +"%Y  %b %d - %T") $Script[$$]: Created /etc/network/interfaces" >> $Slog
}


# - sshd.config
function sshd_config()
{
echo "$(date +"%Y  %b %d - %T") $Script[$$]: Generating /etc/ssh/sshd.config" >> $Slog

tee /etc/ssh/sshd.config << _xXx_
#   
#   Generated by $Script: $(date +"%y.%m.%d - %T") 
#
Port 60037
Protocol 2
AddressFamily inet
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_dsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
UsePrivilegeSeparation yes
SyslogFacility AUTH
LogLevel VERBOSE
LoginGraceTime 120
PermitRootLogin no
StrictModes yes
RSAAuthentication yes
PubkeyAuthentication yes
IgnoreRhosts yes
RhostsRSAAuthentication no
HostbasedAuthentication no
PermitEmptyPasswords no
ChallengeResponseAuthentication no
X11Forwarding no
X11DisplayOffset 10
PrintMotd no
PrintLastLog yes
TCPKeepAlive yes
Subsystem sftp /usr/lib/openssh/sftp-server
UsePAM yes
_xXx_

echo "$(date +"%Y  %b %d - %T") $Script[$$]: Created /etc/ssh/sshd.config" >> $Slog
}


# - sysctl.conf
function sysctl_conf()
{
echo "$(date +"%Y  %b %d - %T") $Script[$$]: Generating /etc/sysctl.conf" >> $Slog

tee /etc/sysctl.conf << _xXx_
#   
#   Generated by $Script: $(date +"%y.%m.%d - %T") 
#
net.ipv4.conf.default.rp_filter=1
net.ipv4.conf.all.rp_filter=1
net.ipv4.tcp_syncookies=1
net.ipv4.ip_forward=1
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.all.log_martians = 1
_xXx_

echo "$(date +"%Y  %b %d - %T") $Script[$$]: Created /etc/sysctl.conf" >> $Slog
}


# - iptables
function ip_tables()
{
echo "$(date +"%Y  %b %d - %T") $Script[$$]: Generating /etc/network/iptables" >> $Slog

tee /etc/network/iptables << _xXx_
#   
#   Generated by $Script: $(date +"%y.%m.%d - %T") 
#
*filter
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [63:10188]
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -i eth0 -p tcp -m tcp --dport 22 -j ACCEPT
-A INPUT -i eth0 -p tcp -m tcp --dport 60037 -j ACCEPT
-A INPUT -i eth1 -j ACCEPT
-A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT
-A INPUT -p icmp -m icmp --icmp-type 0 -j ACCEPT
-A INPUT -p icmp -m icmp --icmp-type 3 -j ACCEPT
-A INPUT -p icmp -m icmp --icmp-type 4 -j ACCEPT
-A INPUT -p icmp -m icmp --icmp-type 11 -j ACCEPT
-A INPUT -p icmp -m icmp --icmp-type 12 -j ACCEPT
-A INPUT -p tcp -m tcp --tcp-flags SYN,FIN SYN,FIN -j DROP
-A INPUT -p tcp -m tcp --tcp-flags SYN,RST SYN,RST -j DROP
-A INPUT -p tcp -m tcp --tcp-flags RST RST -m limit --limit 2/second --limit-burst 2 -j ACCEPT
-A INPUT -m state --state INVALID -j DROP
-A FORWARD -m state --state INVALID -j DROP
-A FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT
-A FORWARD -i eth1 -o eth0 -m state --state NEW -j ACCEPT
-A OUTPUT -o eth1 -j ACCEPT
COMMIT
#   Generated by $Script: $(date +"%y.%m.%d - %T") 
*nat
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
-A POSTROUTING -o eth0 -j MASQUERADE
COMMIT
#   Generated by $Script: $(date +"%y.%m.%d - %T") 
*mangle
:PREROUTING ACCEPT [109:8148]
:INPUT ACCEPT [109:8148]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [65:10356]
:POSTROUTING ACCEPT [65:10356]
COMMIT
#   Generated by $Script: $(date +"%y.%m.%d - %T") 
_xXx_

echo "$(date +"%Y  %b %d - %T") $Script[$$]: Created /etc/network/iptables" >> $Slog
}


#
# --------------------------------------------------------- SYSTEM SCRIPTS
#


# - 10-help-text
function help_text()
{
echo "$(date +"%Y  %b %d - %T") $Script[$$]: Generating /etc/update-motd.d/10-help-text " >> $Slog

tee /etc/update-motd.d/10-help-text << _xXx_
#!/bin/sh

#   
#   Generated by $Script: $(date +"%y.%m.%d - %T") 
#

echo '
  ██████╗ ██╗███████╗██████╗  ██████╗ ███████╗████████╗
  ██╔══██╗██║██╔════╝██╔══██╗██╔═══██╗╚══███╔╝╚══██╔══╝
  ██████╔╝██║█████╗  ██████╔╝██║   ██║  ███╔╝    ██║
  ██╔══██╗██║██╔══╝  ██╔══██╗██║   ██║ ███╔╝     ██║
  ██████╔╝██║██║     ██║  ██║╚██████╔╝███████╗   ██║
  ╚═════╝ ╚═╝╚═╝     ╚═╝  ╚═╝ ╚═════╝ ╚══════╝   ╚═╝   

  https://sourceforge.net/projects/bifrozt/
  Honeypot Development, 2014
  Version: A-0.0.8 (Happy Halloumi)'
_xXx_

chmod 0755 /etc/update-motd.d/10-help-text

echo "$(date +"%Y  %b %d - %T") $Script[$$]: 0755 permission is set on /etc/update-motd.d/10-help-text" >> $Slog
}


# -
function ()
{
echo "$(date +"%Y  %b %d - %T") $Script[$$]: Generated " >> $Slog

tee FILE << _xXx_
#   
#   Generated by $Script: $(date +"%y.%m.%d - %T") 
#
_xXx_

chmod 0755 

echo "$(date +"%Y  %b %d - %T") $Script[$$]: 0755 is set on " >> $Slog
}


# - motd-00-header
function ()
{
echo "$(date +"%Y  %b %d - %T") $Script[$$]: Generating /etc/update-motd.d/1motd-00-header " >> $Slog

tee /etc/update-motd.d/1motd-00-header << _xXx_
#!/bin/sh

#   
#   Generated by $Script: $(date +"%y.%m.%d - %T") 
#

DISTRIB_DESCRIPTION='Bifrozt'
_xXx_

echo '' >> /etc/update-motd.d/1motd-00-header 
echo '''printf "Welcome to %s (%s %s %s)\n" "$DISTRIB_DESCRIPTION" "$(uname -o)" "$(uname -r)" "$(uname -m)"''' >> /etc/update-motd.d/1motd-00-header

chmod 0755 /etc/update-motd.d/1motd-00-header

echo "$(date +"%Y  %b %d - %T") $Script[$$]: 0755 permissions is set on /etc/update-motd.d/1motd-00-header" >> $Slog
}


# - dionaea_run
function dionaea_run()
{
echo "$(date +"%Y  %b %d - %T") $Script[$$]: Generating /usr/local/bin/dionaea_run " >> $Slog

tee FILE << _xXx_
#!/bin/bash

#   
#   Generated by $Script: $(date +"%y.%m.%d - %T") 
#
#   Developer:  Ioannis “Ion” Koniaris.
#   Usage:      This script is used by the Bifrozt honeypot router to run Dionaea.
#   Link:       https://raw.githubusercontent.com/ikoniaris/dionaea-vagrant/master/runDionaea.sh
#

#Start p0f
sudo p0f -i eth0 -Q /tmp/p0f.sock -l -d -o /var/log/p0f.log

#Start Dionaea as daemon
sudo /opt/dionaea/bin/dionaea -D -l all,-debug -L '*' -c /opt/dionaea/etc/dionaea/dionaea.conf -p /opt/dionaea/var/run/dionaea.pid
_xXx_

chmod 0755 /usr/local/bin/dionaea_run

echo "$(date +"%Y  %b %d - %T") $Script[$$]: 0755 permissions is set on /usr/local/bin/dionaea_run" >> $Slog
}


# - Compile and install Dionaea and dependencies
function ()
{
echo "$(date +"%Y  %b %d - %T") $Script[$$]: Installing and compiling dionaea with dependencies, this might take a while...." >> $Slog

#Create the Dionaea directory in /opt
mkdir /opt/dionaea
cd /opt/dionaea

#Install liblcfg
git clone git://git.carnivore.it/liblcfg.git liblcfg
cd liblcfg/code
autoreconf -vi
./configure --prefix=/opt/dionaea
make install
cd ../../

#Install libemu
git clone git://git.carnivore.it/libemu.git libemu
cd libemu
autoreconf -vi
./configure --prefix=/opt/dionaea
make install
cd ..

#Install libnl
aptitude -y install libnl-3-dev libnl-genl-3-dev libnl-nf-3-dev libnl-route-3-dev

#Install libev
wget http://dist.schmorp.de/libev/Attic/libev-4.04.tar.gz
tar xfz libev-4.04.tar.gz
cd libev-4.04
./configure --prefix=/opt/dionaea
make install
cd ..

#Install Python
wget http://www.python.org/ftp/python/3.2.2/Python-3.2.2.tgz
tar xfz Python-3.2.2.tgz
cd Python-3.2.2/
./configure --enable-shared --prefix=/opt/dionaea --with-computed-gotos \
--enable-ipv6 LDFLAGS="-Wl,-rpath=/opt/dionaea/lib/ -L/usr/lib/x86_64-linux-gnu/"
make
make install
cd ..

#Install Cython
wget http://cython.org/release/Cython-0.15.tar.gz
tar xfz Cython-0.15.tar.gz
cd Cython-0.15
/opt/dionaea/bin/python3 setup.py install
cd ..

#Install libcurl
aptitude -y install curl libcurl3 python-pycurl

#Install libpcap
wget http://www.tcpdump.org/release/libpcap-1.1.1.tar.gz
tar xfz libpcap-1.1.1.tar.gz
cd libpcap-1.1.1
./configure --prefix=/opt/dionaea
make
make install
cd ..

#Install Dionaea
git clone git://git.carnivore.it/dionaea.git dionaea
cd dionaea
autoreconf -vi
./configure --with-lcfg-include=/opt/dionaea/include/ \
--with-lcfg-lib=/opt/dionaea/lib/ \
--with-python=/opt/dionaea/bin/python3.2 \
--with-cython-dir=/opt/dionaea/bin \
--with-udns-include=/opt/dionaea/include/ \
--with-udns-lib=/opt/dionaea/lib/ \
--with-emu-include=/opt/dionaea/include/ \
--with-emu-lib=/opt/dionaea/lib/ \
--with-gc-include=/usr/include/gc \
--with-ev-include=/opt/dionaea/include \
--with-ev-lib=/opt/dionaea/lib \
--with-nl-include=/opt/dionaea/include \
--with-nl-lib=/opt/dionaea/lib/ \
--with-curl-config=/usr/bin/ \
--with-pcap-include=/opt/dionaea/include \
--with-pcap-lib=/opt/dionaea/lib/
make
make install
cd ..

#Install p0f
aptitude -y install p0f

echo "$(date +"%Y  %b %d - %T") $Script[$$]: Dionaea should now be installed, we will not try to configure it..." >> $Slog

#Go to Dionaea's config folder
cd /opt/dionaea/etc/dionaea

#Remove debug messages from log
sed -i 's/levels = "all"/levels = "all,-debug"/g' dionaea.conf

#Change to correct interface
sed -i 's/mode = "getifaddrs"/mode = "manual"/g' dionaea.conf
sed -i 's/addrs = { eth1 = \["::"\] }/addrs = { eth0 = \["0.0.0.0"\] }/g' dionaea.conf

#Enable p0f ihandler
sed -i -r 's/\/\/\t\t\t"p0f"/\t\t\t"p0f"/g' dionaea.conf

echo "$(date +"%Y  %b %d - %T") $Script[$$]: Dionaea may or may not be working now." >> $Slog
}


#
# --------------------------------------------------------- SOFTWARE INSTALLATION
#

function ()
{
echo "$(date +"%Y  %b %d - %T") $Script[$$]: Generated " >> $Slog

tee FILE << _xXx_
#   
#   Generated by $Script: $(date +"%y.%m.%d - %T") 
#
_xXx_

chmod 0755 

echo "$(date +"%Y  %b %d - %T") $Script[$$]: 0755 is set on " >> $Slog
}





echo "$(date +"%Y  %b %d - %T") $Script[$$]: " >> $Slog
echo "$(date +"%Y  %b %d - %T") $Script[$$]: " >> $Slog


#
# --------------------------------------------------------- MACRO FUNCTIONS
#


# - Configures the system to only run HonSSH
function bifrozt_mini()
{
    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Starting Bifrozt Mini installation..." >> $Slog
    
    run_sw_update

    apt-get install git isc-dhcp-server htop \
    slurm python-twisted python-mysqldb python-paramiko -y

    git_honssh

    dhcpd_conf

    if_file

    sshd_config

    sysctl_conf

    ip_tables

    help_text
    
    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Bifrozt Mini installation is complete." >> $Slog
}


# - Configures the system to run HonSSH and Honeyd
function bifrozt_middway()
{
    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Starting Bifrozt Middway installation..." >> $Slog

    run_sw_update
   
    apt-get install isc-dhcp-server htop slurm honeyd \
    honeyd-common iisemulator git python-twisted \
    python-mysqldb python-paramiko -y 
    
    git_honssh

    dhcpd_conf

    if_file

    sshd_config

    sysctl_conf

    ip_tables

    help_text
    
    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Bifrozt Middway installation is complete." >> $Slog
}


# - Configures the system to run HonSSH, Honeyd and Dionaea
function bifrozt_full()
{
    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Starting Bifrozt Full installation..." >> $Slog

    run_sw_update

    apt-get install aptitude autoconf automake\
    bison build-essential flex git honeyd honeyd-common
    htop iisemulator isc-dhcp-server libcurl4-openssl-dev\
    libglib2.0-dev libreadline-dev libsqlite3-dev libssl-dev \
    libtool libudns-dev pkg-config python-dev python-mysqldb\
    python-paramiko python-twisted slurm subversion -y

    git_honssh

    dhcpd_conf

    if_file

    sshd_config

    sysctl_conf

    ip_tables

    help_text
    
    dionaea_run
    
    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Bifrozt Full installation is complete." >> $Slog
}



#
# --------------------------------------------------------- SCRIPT EXECUTION
#


function main()
{
    if [ "$1" = "MINI" ]
    then
        bifrozt_mini
    fi

    if [ "$1" = "MIDD" ]
    then
        bifrozt_mini
    fi

    if [ "$1" = "FULL" ]
    then
        bifrozt_mini
    fi
}

echo "$(date +"%Y  %b %d - %T") $Script[$$]: Bifrozt installation has started" >> $Slog

main

echo "$(date +"%Y  %b %d - %T") $Script[$$]: Bifrozt installation is complete" >> $Slog


exit 0
