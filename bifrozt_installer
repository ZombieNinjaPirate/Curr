#!/bin/bash

#
#   Developer:      Are Hansen
#   Date:           2014, May 5
#
#   Usage:
#   This script is executed by the debconf installer and takes care of configuration,
#   package installation, updating and upgrading of Bifrozt during installation.
#
#   Copyright (c) 2014, Are Hansen - Honeypot Development
# 
#   All rights reserved.
# 
#   Redistribution and use in source and binary forms, with or without modification, are
#   permitted provided that the following conditions are met:
#
#   1. Redistributions of source code must retain the above copyright notice, this list
#   of conditions and the following disclaimer.
# 
#   2. Redistributions in binary form must reproduce the above copyright notice, this
#   list of conditions and the following disclaimer in the documentation and/or other
#   materials provided with the distribution.
# 
#   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND AN
#   EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
#   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
#   SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
#   TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
#   BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
#   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF
#   THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

unset DEBCONF_REDIR
unset DEBCONF_FRONTEND
unset DEBIAN_HAS_FRONTEND
unset DEBIAN_FRONTEND

declare -rx Script="${0##*/}"
declare Slog="/var/log/$Script.log"


#
# --------------------------------------------------------- SOFTWARE INSTALLATION
#


# - Update, upgrade and dist-upgrade
function run_sw_update()
{
    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Making sure the entire system is up to date" >> $Slog

    apt-get update
    apt-get upgrade -y
    apt-get dist-upgrade -y

    echo "$(date +"%Y  %b %d - %T") $Script[$$]: System is now up to date" >> $Slog
}


# - Install all packages
function bifrozt_base_pkgs()
{
    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Installing Bifrozt base packages" >> $Slog

    apt-get install git isc-dhcp-server htop \
    slurm python-twisted python-mysqldb python-paramiko -y >> $Slog

    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Bifrozt base packages was installed" >> $Slog
}


# - Install all packages for Honeyd
function bifrozt_honeyd_pkgs()
{
    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Installing Honeyd packages" >> $Slog

    apt-get install honeyd honeyd-common iisemulator -y >> $Slog

    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Honeyd packages was installed" >> $Slog
}


# - Install all packages required for Dionaea
function bifrozt_dionaea_pkgs()
{
    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Installing Honeyd packages" >> $Slog

    apt-get install autoconf automake bison build-essential flex libcurl4-openssl-dev \
    libglib2.0-dev libreadline-dev libsqlite3-dev libssl-dev libtool libudns-dev \
    pkg-config python-dev subversion install libnl-3-dev libnl-genl-3-dev libnl-nf-3-dev \
    libnl-route-3-dev curl libcurl3 python-pycurl p0f -y >> $Slog

    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Honeyd packages was installed" >> $Slog
}


# - Git clone HonSSH
function git_honssh()
{
    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Installing HonSSH in /opt/honssh" >> $Slog

    git clone https://code.google.com/p/honssh/ /opt/honssh >> $Slog

    Err="$?"

    if [ "$Err" != "0" ]
    then
        echo "$(date +"%Y  %b %d - %T") $Script[$$]: HonSSH failed with error code: $Err" >> $Slog
    else
        echo "$(date +"%Y  %b %d - %T") $Script[$$]: HonSSH was installed. Exit code: $Err" >> $Slog
    fi
}


function fetch_configs()
{
    # - dhcpd.conf
    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Fetching dhcpd.conf file" >> $Slog

    wget -q https://raw.githubusercontent.com/ZombieNinjaPirate/Bifrozt/master/bifrozt-dhcpd.conf\
    -O /etc/dhcp/dhcpd.conf

    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Created /etc/dhcp/dhcpd.conf" >> $Slog

    # - interfaces
    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Fetching interfaces file" >> $Slog

    wget -q https://raw.githubusercontent.com/ZombieNinjaPirate/Bifrozt/master/bifrozt-interfaces\
    -O /etc/network/interfaces

    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Created /etc/network/interfaces" >> $Slog

    # - sshd.config
    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Fetching sshd.config file" >> $Slog

    wget -q https://raw.githubusercontent.com/ZombieNinjaPirate/Bifrozt/master/bifrozt-sshd_config\
    -O /etc/ssh/sshd.config

    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Created /etc/ssh/sshd.config" >> $Slog

    # - sysctl.conf
    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Fetching sysctl.conf file" >> $Slog

    wget -q https://raw.githubusercontent.com/ZombieNinjaPirate/Bifrozt/master/bifrozt-sysctl.conf\
    -O /etc/sysctl.conf

    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Created /etc/sysctl.conf" >> $Slog

    # - iptables
    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Fetching iptables file" >> $Slog

    wget -q https://raw.githubusercontent.com/ZombieNinjaPirate/Bifrozt/master/bifrozt-tables\
    -O /etc/network/iptables

    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Created /etc/network/iptables" >> $Slog

    # - 10-help-text
    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Fetching 10-help-text file" >> $Slog

    wget -q https://raw.githubusercontent.com/ZombieNinjaPirate/Bifrozt/master/bifrozt-10-help-text\
    -O /etc/update-motd.d/10-help-text

    chmod 0755 /etc/update-motd.d/10-help-text

    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Created /etc/update-motd.d/10-help-text" >> $Slog

    # - motd-00-header
    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Fetching motd-00-header file" >> $Slog

    wget -q https://raw.githubusercontent.com/ZombieNinjaPirate/Bifrozt/master/bifrozt-motd-00-header\
    -O /etc/update-motd.d/motd-00-header

    chmod 0755 /etc/update-motd.d/motd-00-header

    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Created /etc/update-motd.d/motd-00-header" >> $Slog

    # - dionaea_run
    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Fetching dionaea_run file" >> $Slog

    wget -q https://raw.githubusercontent.com/ikoniaris/dionaea-vagrant/master/runDionaea.sh
    -O /usr/local/bin/dionaea_run

    chmod 0755 /usr/local/bin/dionaea_run

    echo "$(date +"%Y  %b %d - %T") $Script[$$]: 0755 permissions is set on /usr/local/bin/dionaea_run" >> $Slog
}


# - Compile and install Dionaea and dependencies
#
function install_dionaea()
{
echo "$(date +"%Y  %b %d - %T") $Script[$$]: Installing Dionaea with dependencies..." >> $Slog

#Create the Dionaea directory in /opt
mkdir /opt/dionaea
cd /opt/dionaea

#Install liblcfg
git clone git://git.carnivore.it/liblcfg.git liblcfg
cd liblcfg/code
autoreconf -vi
./configure --prefix=/opt/dionaea
make install
cd ../../

#Install libemu
git clone git://git.carnivore.it/libemu.git libemu
cd libemu
autoreconf -vi
./configure --prefix=/opt/dionaea
make install
cd ..

#Install libev
wget http://dist.schmorp.de/libev/Attic/libev-4.04.tar.gz
tar xfz libev-4.04.tar.gz
cd libev-4.04
./configure --prefix=/opt/dionaea
make install
cd ..

#Install Python
wget http://www.python.org/ftp/python/3.2.2/Python-3.2.2.tgz
tar xfz Python-3.2.2.tgz
cd Python-3.2.2/
./configure --enable-shared --prefix=/opt/dionaea --with-computed-gotos \
--enable-ipv6 LDFLAGS="-Wl,-rpath=/opt/dionaea/lib/ -L/usr/lib/x86_64-linux-gnu/"
make
make install
cd ..

#Install Cython
wget http://cython.org/release/Cython-0.15.tar.gz
tar xfz Cython-0.15.tar.gz
cd Cython-0.15
/opt/dionaea/bin/python3 setup.py install
cd ..

#Install libpcap
wget http://www.tcpdump.org/release/libpcap-1.1.1.tar.gz
tar xfz libpcap-1.1.1.tar.gz
cd libpcap-1.1.1
./configure --prefix=/opt/dionaea
make
make install
cd ..

#Install Dionaea
git clone git://git.carnivore.it/dionaea.git dionaea
cd dionaea
autoreconf -vi
./configure --with-lcfg-include=/opt/dionaea/include/ \
--with-lcfg-lib=/opt/dionaea/lib/ \
--with-python=/opt/dionaea/bin/python3.2 \
--with-cython-dir=/opt/dionaea/bin \
--with-udns-include=/opt/dionaea/include/ \
--with-udns-lib=/opt/dionaea/lib/ \
--with-emu-include=/opt/dionaea/include/ \
--with-emu-lib=/opt/dionaea/lib/ \
--with-gc-include=/usr/include/gc \
--with-ev-include=/opt/dionaea/include \
--with-ev-lib=/opt/dionaea/lib \
--with-nl-include=/opt/dionaea/include \
--with-nl-lib=/opt/dionaea/lib/ \
--with-curl-config=/usr/bin/ \
--with-pcap-include=/opt/dionaea/include \
--with-pcap-lib=/opt/dionaea/lib/
make
make install
cd ..

echo "$(date +"%Y  %b %d - %T") $Script[$$]: Configuring Dionaea" >> $Slog

#Go to Dionaea's config folder
cd /opt/dionaea/etc/dionaea

#Remove debug messages from log
sed -i 's/levels = "all"/levels = "all,-debug"/g' dionaea.conf

#Change to correct interface
sed -i 's/mode = "getifaddrs"/mode = "manual"/g' dionaea.conf
sed -i 's/addrs = { eth1 = \["::"\] }/addrs = { eth0 = \["0.0.0.0"\] }/g' dionaea.conf

#Enable p0f ihandler
sed -i -r 's/\/\/\t\t\t"p0f"/\t\t\t"p0f"/g' dionaea.conf

echo "$(date +"%Y  %b %d - %T") $Script[$$]: Dionaea may or may not be working now." >> $Slog
}

#
# --------------------------------------------------------- MACRO FUNCTIONS
#

# - Configures the system to only run HonSSH
function bifrozt_mini()
{
    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Starting Bifrozt Mini installation..." >> $Slog

    bifrozt_base_pkgs
    
    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Bifrozt Mini installation is complete." >> $Slog
}


# - Configures the system to run HonSSH and Honeyd
function bifrozt_middway()
{
    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Starting Bifrozt Middway installation..." >> $Slog

    bifrozt_base_pkgs

    bifrozt_honeyd_pkgs

    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Bifrozt Middway installation is complete." >> $Slog
}


# - Configures the system to run HonSSH, Honeyd and Dionaea
function bifrozt_full()
{
    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Starting Bifrozt Full installation..." >> $Slog

    bifrozt_base_pkgs

    bifrozt_honeyd_pkgs

    bifrozt_dionaea_pkgs

    install_dionaea

    echo "$(date +"%Y  %b %d - %T") $Script[$$]: Bifrozt Full installation is complete." >> $Slog
}



#
# --------------------------------------------------------- SCRIPT EXECUTION
#


function main()
{
    run_sw_update

    if [ "$1" = "MINI" ]
    then
        bifrozt_mini
    fi

    if [ "$1" = "MIDD" ]
    then
        bifrozt_mini
    fi

    if [ "$1" = "FULL" ]
    then
        bifrozt_mini
    fi

    git_honssh

    fetch_configs
}

echo "$(date +"%Y  %b %d - %T") $Script[$$]: Bifrozt installation has started" >> $Slog

main

echo "$(date +"%Y  %b %d - %T") $Script[$$]: Bifrozt installation is complete" >> $Slog


exit 0
